---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/v1/authenticate":
    post:
      summary: Authenticate a User
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: User authenticated
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/v1/categories":
    get:
      summary: Retrieves a list of Categories
      tags:
      - Categories
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Categories found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Create a new Category (if user is 'admin')
      tags:
      - Categories
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Category created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/v1/categories/{id}":
    delete:
      summary: Delete a Category (if user is 'admin')
      tags:
      - Categories
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Category Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
  "/v1/register":
    post:
      summary: Register a new User
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: User created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - email
              - first_name
              - last_name
              - password
              - password_confirmation
  "/v1/reservations":
    post:
      summary: Create a new Reservation
      tags:
      - Reservations
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Reservation created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                shift:
                  type: string
                user_id:
                  type: integer
                restaurant_id:
                  type: integer
              required:
              - date
              - shift
              - user_id
              - restaurant_id
    get:
      summary: Retrieves a list of Reservations
      tags:
      - Reservations
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Reservations found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    shift:
                      type: string
                    user_id:
                      type: integer
                    restaurant_id:
                      type: integer
  "/v1/reservations/{id}":
    delete:
      summary: Delete a Reservation
      tags:
      - Reservations
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Reservation Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: string
                  shift:
                    type: string
                  user_id:
                    type: integer
                  restaurant_id:
                    type: integer
  "/v1/restaurants":
    post:
      summary: Create a new Restaurant (if user is 'admin')
      tags:
      - Restaurants
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Restaurant created
        '400':
          description: bad request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                reservation_spots:
                  type: integer
                image:
                  type: string
                price_range:
                  type: integer
                shifts:
                  type: array
                  items:
                    type: integer
                categories:
                  type: array
                  items:
                    type: integer
              required:
              - name
              - description
              - reservation_spots
              - image
              - price_range
              - shifts
              - categories
    get:
      summary: Retrieves a list of Restaurants
      tags:
      - Restaurants
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Restaurants found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    reservation_spots:
                      type: integer
                    image:
                      type: string
                    price_range:
                      type: integer
                    shifts:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                    categories:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
  "/v1/restaurants/{id}":
    delete:
      summary: Delete a Restaurant (if user is 'admin')
      tags:
      - Restaurants
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Restaurant Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  reservation_spots:
                    type: integer
                  image:
                    type: string
                  price_range:
                    type: integer
                  shifts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
    get:
      summary: Retrieve a Restaurant
      tags:
      - Restaurants
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Restaurant Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  reservation_spots:
                    type: integer
                  image:
                    type: string
                  price_range:
                    type: integer
                  shifts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
  "/v1/eliminate/":
    get:
      summary: Retrieve a list of all Restaurants
      tags:
      - Restaurants
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Restaurant Found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
  "/v1/restaurants/{restaurant_id}/availability/{date}":
    get:
      summary: Retrieve a list of all Restaurants
      tags:
      - Restaurants
      security:
      - bearerAuth: []
      parameters:
      - name: restaurant_id
        in: path
        required: true
        schema:
          type: integer
      - name: date
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Restaurant Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  body:
                    type: object
                    properties:
                      Breakfast:
                        type: integer
                      Lunch:
                        type: integer
                      Dinner:
                        type: integer
  "/v1/shifts":
    get:
      summary: Retrieves a list of Shifts
      tags:
      - Shifts
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Shifts found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Create a new Shift (if user is 'admin')
      tags:
      - Shifts
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Shift created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/v1/shifts/{id}":
    delete:
      summary: Delete a Shift (if user is 'admin')
      tags:
      - Shifts
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Shift Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: slowppi-services.herokuapp.com/
